@model gtv_tele.Models.RegistrationView

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<div class="register-box">
    <div class="register-logo">
        <a href="#"><b>Admin</b>GTV</a>
    </div>

    <div class="register-box-body">
        <p class="login-box-msg">Register a new membership</p>

        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
        {
            <div class="alert alert-success">
                <strong>Success ! </strong>@ViewBag.Message
            </div>
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-feedback">
                    @*<input type="text" class="form-control" name="username" id="username" placeholder="Full name">*@
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "User name" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @*<input type="email" class="form-control" name="email" id="email" placeholder="Email">*@
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First name" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @*<input type="password" class="form-control" name="password" id="password" placeholder="Password">*@
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last name" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @*<input type="password" class="form-control" name="password" id="password" placeholder="Password">*@
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("ErrorEmail", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @*<input type="password" class="form-control" name="password" id="password" placeholder="Password">*@
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password" } })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-xs-8">

                    </div>
                    <!-- /.col -->
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Register</button>
                    </div>
                    <!-- /.col -->
                </div>
            }
        }
        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status) != true)
        {
            <br />
            <div class="alert alert-danger">
                <strong>Error!</strong> @ViewBag.Message
            </div>
        }
        @Html.ActionLink("I already have a membership", "Index", "Account")

    </div>
    <!-- /.form-box -->
</div>
<!-- /.register-box -->
<!-- jQuery 3 -->
<script src="../../bower_components/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap 3.3.7 -->
<script src="../../bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- iCheck -->
<script src="../../plugins/iCheck/icheck.min.js"></script>

